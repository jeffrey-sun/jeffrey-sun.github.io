<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codes on Jeffrey Blog</title>
    <link>https://blog.jeffreysun.net/code/</link>
    <description>Recent content in Codes on Jeffrey Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved - 2017</copyright>
    <lastBuildDate>Wed, 22 May 2019 10:34:12 +0800</lastBuildDate>
    
	<atom:link href="https://blog.jeffreysun.net/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>基础镜像配置</title>
      <link>https://blog.jeffreysun.net/code/docker/%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 22 May 2019 10:34:12 +0800</pubDate>
      
      <guid>https://blog.jeffreysun.net/code/docker/%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/</guid>
      <description> apline 修改alpine镜像源 使用阿里云的源 https://mirrors.aliyun.com
sed -i &#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39; /etc/apk/repositories  apk 的基本使用 $ apk add # 安装软件 $ apk add asterisk=1.6.0.21-r0 #安装指定版本软件包 $ apk add &#39;asterisk&amp;lt;1.6.1&#39; # 安装指定版本软件包 $ apk add &#39;asterisk&amp;gt;1.6.1&#39; # 安装指定版本软件包 $ apk add openssh openntp vim $ apk add --no-cache mysql-client $ apk add docker --update-cache --repository http://mirrors.ustc.edu.cn/alpine/v3.4/main/ --allow-untrusted $ apk update #更新最新本地镜像源 $ apk upgrade #升级软件 $ apk add --upgrade busybox #指定升级部分软件包 $ apk search #查找所以可用软件包 $ apk search -v #查找所以可用软件包及其描述内容 $ apk search -v &#39;acf*&#39; #通过软件包名称查找软件包 $ apk search -v -d &#39;docker&#39; #通过描述文件查找特定的软件包 $ apk info #列出所有已安装的软件包 $ apk info -a zlib #显示完整的软件包信息 $ apk info --who-owns /sbin/lbu #显示指定文件属于的包 $ apk del openssh openntp vim #卸载并删除软件包  参考  alpine-python3  </description>
    </item>
    
    <item>
      <title>Nginx 多站点域名代理配置</title>
      <link>https://blog.jeffreysun.net/code/web/ngnix-domin-config/</link>
      <pubDate>Mon, 20 May 2019 12:03:26 +0800</pubDate>
      
      <guid>https://blog.jeffreysun.net/code/web/ngnix-domin-config/</guid>
      <description>之前买了一个虚拟主机， 想着没事做个博客玩一下。 刚好最近在学习docker。 就想着使用docker来部署我的站点。 想着后面可能会将多个域名只想这台主机（也许最后只有一个域名）， 就想折腾一下。 当前主流的WEB服务是 Apache和Nginx。 听说Ngnix，功能比较多，工作中接触比较少，就选Ngnix。 嗯，我对比了解的技术还是有很强的好奇心的（no zuo no die）。
Nginx 多域名代理 首先上我的配置文件
worker_processes 1; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server { listen 80; server_name test.jeffreysun.net; location / { proxy_pass http://172.25.0.133; } } server { listen 80; server_name blog.jeffreysun.net; location / { proxy_pass http://172.25.0.134; } } }  解释一下：
在这里我准备启动三个容器，一个代理容器和两个web容器。地址分别是是 172.25.0.132&amp;frasl;172.25.0.133&amp;frasl;172.25.0.134。 把代理的端口暴露出来，其他的容器不暴露端口， 所有的请求通过代理转发到内部子网。 代理可以通过配置，将不同域名的请求转发到不同的容器，完成我的需求。
Nginx Https 配置 最近 网页不做Https浏览器都会报出警告，有时间就去申请一下免费的ssl证书。</description>
    </item>
    
  </channel>
</rss>